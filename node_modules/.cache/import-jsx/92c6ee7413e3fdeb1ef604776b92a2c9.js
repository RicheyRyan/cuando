const React = require('react');

const {
  render
} = require('ink');

const importJSX = require('import-jsx');
/* istanbul ignore next */


module.exports = (tap, Type = 'base') => {
  // NB: React will only render as a tag if it's capitalized
  if (typeof Type === 'function' && Type.prototype.isReactComponent) return render( /*#__PURE__*/React.createElement(Type, {
    tap: tap
  }));
  if (typeof Type !== 'string' || !types.includes(Type)) throw new Error('unsupported report type: ' + Type);
  const Report = importJSX('./reports/' + Type);
  render( /*#__PURE__*/React.createElement(Report, {
    tap: tap
  }));
};

const types = module.exports.types = require('../types.js');

const cap = s => s.replace(/^./, $0 => $0.toUpperCase());

types.forEach(type => Object.defineProperty(module.exports, cap(type), {
  get: () => importJSX(`./reports/${type}`),
  enumerable: true
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInJlbmRlciIsImltcG9ydEpTWCIsIm1vZHVsZSIsImV4cG9ydHMiLCJ0YXAiLCJUeXBlIiwicHJvdG90eXBlIiwiaXNSZWFjdENvbXBvbmVudCIsInR5cGVzIiwiaW5jbHVkZXMiLCJFcnJvciIsIlJlcG9ydCIsImNhcCIsInMiLCJyZXBsYWNlIiwiJDAiLCJ0b1VwcGVyQ2FzZSIsImZvckVhY2giLCJ0eXBlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXQiLCJlbnVtZXJhYmxlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU07QUFBQ0MsRUFBQUE7QUFBRCxJQUFXRCxPQUFPLENBQUMsS0FBRCxDQUF4Qjs7QUFDQSxNQUFNRSxTQUFTLEdBQUdGLE9BQU8sQ0FBQyxZQUFELENBQXpCO0FBQ0E7OztBQUNBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsQ0FBQ0MsR0FBRCxFQUFNQyxJQUFJLEdBQUcsTUFBYixLQUF3QjtBQUN2QztBQUNBLE1BQUksT0FBT0EsSUFBUCxLQUFnQixVQUFoQixJQUE4QkEsSUFBSSxDQUFDQyxTQUFMLENBQWVDLGdCQUFqRCxFQUNFLE9BQU9QLE1BQU0sZUFBQyxvQkFBQyxJQUFEO0FBQU0sSUFBQSxHQUFHLEVBQUVJO0FBQVgsSUFBRCxDQUFiO0FBRUYsTUFBSSxPQUFPQyxJQUFQLEtBQWdCLFFBQWhCLElBQTRCLENBQUNHLEtBQUssQ0FBQ0MsUUFBTixDQUFlSixJQUFmLENBQWpDLEVBQ0UsTUFBTSxJQUFJSyxLQUFKLENBQVUsOEJBQThCTCxJQUF4QyxDQUFOO0FBRUYsUUFBTU0sTUFBTSxHQUFHVixTQUFTLENBQUMsZUFBZUksSUFBaEIsQ0FBeEI7QUFDQUwsRUFBQUEsTUFBTSxlQUFDLG9CQUFDLE1BQUQ7QUFBUSxJQUFBLEdBQUcsRUFBRUk7QUFBYixJQUFELENBQU47QUFDRCxDQVZEOztBQVdBLE1BQU1JLEtBQUssR0FBR04sTUFBTSxDQUFDQyxPQUFQLENBQWVLLEtBQWYsR0FBdUJULE9BQU8sQ0FBQyxhQUFELENBQTVDOztBQUNBLE1BQU1hLEdBQUcsR0FBR0MsQ0FBQyxJQUFJQSxDQUFDLENBQUNDLE9BQUYsQ0FBVSxJQUFWLEVBQWdCQyxFQUFFLElBQUlBLEVBQUUsQ0FBQ0MsV0FBSCxFQUF0QixDQUFqQjs7QUFDQVIsS0FBSyxDQUFDUyxPQUFOLENBQWNDLElBQUksSUFDaEJDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQmxCLE1BQU0sQ0FBQ0MsT0FBN0IsRUFBc0NTLEdBQUcsQ0FBQ00sSUFBRCxDQUF6QyxFQUFpRDtBQUMvQ0csRUFBQUEsR0FBRyxFQUFFLE1BQU1wQixTQUFTLENBQUUsYUFBWWlCLElBQUssRUFBbkIsQ0FEMkI7QUFFL0NJLEVBQUFBLFVBQVUsRUFBRTtBQUZtQyxDQUFqRCxDQURGIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpXG5jb25zdCB7cmVuZGVyfSA9IHJlcXVpcmUoJ2luaycpXG5jb25zdCBpbXBvcnRKU1ggPSByZXF1aXJlKCdpbXBvcnQtanN4Jylcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5tb2R1bGUuZXhwb3J0cyA9ICh0YXAsIFR5cGUgPSAnYmFzZScpID0+IHtcbiAgLy8gTkI6IFJlYWN0IHdpbGwgb25seSByZW5kZXIgYXMgYSB0YWcgaWYgaXQncyBjYXBpdGFsaXplZFxuICBpZiAodHlwZW9mIFR5cGUgPT09ICdmdW5jdGlvbicgJiYgVHlwZS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudClcbiAgICByZXR1cm4gcmVuZGVyKDxUeXBlIHRhcD17dGFwfSAvPilcblxuICBpZiAodHlwZW9mIFR5cGUgIT09ICdzdHJpbmcnIHx8ICF0eXBlcy5pbmNsdWRlcyhUeXBlKSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Vuc3VwcG9ydGVkIHJlcG9ydCB0eXBlOiAnICsgVHlwZSlcblxuICBjb25zdCBSZXBvcnQgPSBpbXBvcnRKU1goJy4vcmVwb3J0cy8nICsgVHlwZSlcbiAgcmVuZGVyKDxSZXBvcnQgdGFwPXt0YXB9IC8+KVxufVxuY29uc3QgdHlwZXMgPSBtb2R1bGUuZXhwb3J0cy50eXBlcyA9IHJlcXVpcmUoJy4uL3R5cGVzLmpzJylcbmNvbnN0IGNhcCA9IHMgPT4gcy5yZXBsYWNlKC9eLi8sICQwID0+ICQwLnRvVXBwZXJDYXNlKCkpXG50eXBlcy5mb3JFYWNoKHR5cGUgPT5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZS5leHBvcnRzLCBjYXAodHlwZSksIHtcbiAgICBnZXQ6ICgpID0+IGltcG9ydEpTWChgLi9yZXBvcnRzLyR7dHlwZX1gKSxcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICB9KSlcbiJdfQ==